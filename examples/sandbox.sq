fn main() -> i32 {
    let mut x: i32 = 10;
    let mut y: i32 = 10;
    x = x + y + 21;
    return x;
}


// fn main() -> i32 {
//     let mut i: i32 = 115;
//     let run: bool = true;
//     while run {
//         let mut j: i32 = 1;
//         while j < i - 1 {
//             j = j + 1;
//             if i % j == 0 {
//                 break;
//             }
//         }
//         if i % j == 0 {
//             i = i + 1;
//             continue;
//         }
//         break;
//     }
//     i
// }

// fn main() {
//     let mut i: i32 = 0;
//     while i <= 1000 {
//         if is_prime(i) {
//             print_int(i);
//         }
//         i = i + 1;
//     }
// }

// fn is_prime(n: i32) -> bool {
//     if n <= 1 {
//         return false;
//     }
//     let mut i: i32 = 2;
//     while i < n {
//         if n % i == 0 {
//             return false;
//         }
//         i = i + 1;
//     }
    
//     return true;
// }

// fn main() -> i32 {
//     print_int(10);
//     let x: i32 = multiply(10, 10);
//     print_int(x);
//     return 0;
// }
// fn multiply(x: i32, y: i32) -> i32 {
//     return x * y;
// }

