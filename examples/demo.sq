fn main() -> i32 {
    let x: &mut i32 = &mut 0;
    let mut i: i32 = 0;
    while i < 10 {
        i = i + 1;
        next_prime(x);
        print_int(*x);
    }
    return *x;
}

fn next_prime(n: &mut i32) {
    while true {
        *n = *n + 1;
        if is_prime(*n) {
            break;
        }
    }
}

fn is_prime(n: i32) -> bool {
    if n < 2 {
        return false;
    }

    let mut i: i32 = 2;
    while i < n {
        if n % i == 0 {
            return false;
        }
        i = i + 1;
    }

    true
}
