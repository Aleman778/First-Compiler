
fn main() {
    let x: i32 = 7070;
    let y: i32 = next_prime(x);
    print_int(x);
    print_int(y);
    
    let z: &i32 = test_references(&20);
    print_int(*z);
}

fn next_prime(mut i: i32) -> i32 {
    while true {
        let mut j: i32 = 1;
        while j < i - 1 {
            j = j + 1;
            if i % j == 0 {
                break;
            }
        }
        if i % j == 0 {
            i = i + 1;
            continue;
        }
        break;
    }
    return i;
}

fn test_references(y: &i32) -> &i32 {
    let mut x: i32 = 10;
    print_int(x);

    {
        let write_x: &mut i32 = &mut x;
        *write_x = *write_x + 10;
    }

    let read_x: &i32 = &x;
    print_int(*read_x);
    
    return y;
}
